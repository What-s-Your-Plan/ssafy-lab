plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version '0.17.1'
    id 'jacoco'
}

group = 'com.butter'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jacoco {
    toolVersion = "0.8.11"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    /* Boot */
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    /* Database */
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    /* Lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    /* Test */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.mockito:mockito-core'
    runtimeOnly 'com.h2database:h2'
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.12.6'
    implementation 'com.github.codemonstur:embedded-redis:1.4.3'

    /* API Docs */


    /* JWT */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

    /* S3 */
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    testImplementation 'io.findify:s3mock_2.12:0.2.4'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

/* Jacoco Start */
jacocoTestReport {
    reports {
        html.required = true
        html.outputLocation = file("reports/jacoco/index.xml")
    }


    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, excludes: [
                            "**/*Application*",
                            "**/annotation/**",
                            "**/cond/**",
                            "**/config/**",
                            "**/common/**",
                            "**/dto/**",
                            "**/data/**",
                            "**/exception/**",
                            "**/properties/**"
                    ])
                })
        )
    }

    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = "CLASS"

            limit {
                counter = "LINE"
                value = "COVEREDRATIO"
                minimum = 0.00
            }

            excludes = [
                    "**/*Application*",
                    "**/*Request*",
                    "**/*Response*",
                    "**/annotation/**",
                    "**/cond/**",
                    "**/config/**",
                    "**/common/**",
                    "**/dto/**",
                    "**/data/**",
                    "**/exception/**",
                    "**/properties/**"
            ]
        }
    }
}
/* Jacoco End */